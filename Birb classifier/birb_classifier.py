# -*- coding: utf-8 -*-
"""Birb classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lwnSPMmEi59m8b2Um8QMLDmon5CazOTy
"""

from google.colab import drive
drive.mount("/content/gdrive")

from keras.preprocessing.image import ImageDataGenerator
from keras.models import Sequential
from keras.layers import MaxPool2D
from keras.layers import Dropout
from keras.layers import Flatten
from keras.layers import Conv2D
from keras.layers import Dense
import tensorflow as tf
import pandas as pd
import numpy as np
import cv2
import os

IMG_HEIGHT = 200
IMG_WIDTH = 200
BATCH_SIZE = 2
DIR = '/content/gdrive/My Drive/Dataset/'

training_data = ImageDataGenerator(rescale=1./255,
                                   validation_split=0.1,
                                   horizontal_flip=True,
                                   rotation_range=5,
                                   width_shift_range=0.05,
                                   height_shift_range=0.05,
                                   shear_range=0.05,
                                   zoom_range=0.05,)

train_generator = training_data.flow_from_directory(DIR,
                                                  target_size=(IMG_HEIGHT, IMG_WIDTH),
                                                  batch_size=BATCH_SIZE,
                                                  color_mode='rgb',
                                                  class_mode='binary',
                                                  subset="training")

validation_generator = training_data.flow_from_directory(DIR,
                                                         target_size=(IMG_HEIGHT, IMG_WIDTH),
                                                         batch_size=BATCH_SIZE,
                                                         color_mode='rgb',
                                                         class_mode='binary',
                                                         subset='validation')

model = Sequential()

model.add(Conv2D(16, (3, 3), activation='relu', padding="same", input_shape=(200, 200, 3)))

model.add(MaxPool2D(pool_size=(2, 2)))

model.add(Conv2D(32, (3, 3), activation='relu', padding="same"))

model.add(MaxPool2D(pool_size=(2, 2)))

model.add(Flatten())

model.add(Dense(512,activation="relu"))

model.add(Dropout(0.15))

model.add(Dense(64,activation="relu"))

model.add(Dropout(0.1))





model.add(Dense(1,activation="sigmoid"))

model.compile(loss='binary_crossentropy',optimizer='RMSprop', metrics='accuracy')

history = model.fit_generator(train_generator,
                              verbose=1,
                              validation_data = validation_generator,
                              epochs=10)

labels = ["American Crow", "Blue Jay"]
img_path='/content/gdrive/My Drive/Dataset/1.jpg'

from keras.applications.imagenet_utils import preprocess_input, decode_predictions
from keras.preprocessing import image
img = image.load_img(img_path, target_size=(200, 200))
img = np.array(img)
img = np.resize(img, [1, 200, 200, 3])
res = model.predict(img)
pred = labels[int(res[0])]

pred

